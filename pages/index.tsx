import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { TOGGLE_TRENDING_ITEMS, TOGGLE_TV_ITEM, TOGGLE_MOVIE_ITEM } from '@/const/toggleBar'
import { GetStaticProps } from 'next'
import { dehydrate, QueryClient, useQuery, useQueryClient } from 'react-query'
import BackEnd from '@/network'
import ToggleItemSection from '@/components/ToggleItemSection'
import { useHelper } from '@/hooks'
import IntroHero from '@/components/landing/IntroHero'
const inter = Inter({ subsets: ['latin'] })
const queryClient = new QueryClient()
export const getServerSideProps: GetStaticProps = async (ctx) => {
  // const queryClient = new QueryClient()
  try {
    await queryClient.prefetchQuery(
      [TOGGLE_TRENDING_ITEMS[0].id, 1],
      () =>
        BackEnd.CommonAPI.getItems({
          url: TOGGLE_TRENDING_ITEMS[0].value,
          page: 1,
        }),
      {
        staleTime: Infinity,
      }
    )
    const data = queryClient.getQueryData([TOGGLE_TRENDING_ITEMS[0].id, 1])
    return {
      props: {
        dehydratedState: dehydrate(queryClient),
      },
    }
  } catch (e) {
    return {
      notFound: true,
    }
  } finally {
  }
}
export default function Home() {
  const { data, isLoading, isRefetching } = useQuery<{ results: any[] }>(
    [TOGGLE_TRENDING_ITEMS[0].id, 1],
    () =>
      BackEnd.CommonAPI.getItems({
        url: TOGGLE_TRENDING_ITEMS[0].value,
        page: 1,
      }),
    {
      staleTime: Infinity,
      // initialData: props.dehydratedState.queries[0].state.data.results,
    }
  )
  if (typeof window === 'undefined') console.log('this is server', isLoading, isRefetching)
  else console.log(`isLoading : ${isLoading}\n isRefetching : ${isRefetching}`)
  if (isLoading || isRefetching) return <div>이거 prefetch 되는거 맞음?</div>
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="widths=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <IntroHero items={data!.results.slice(0, 5)} />
      </main>
    </>
  )
}
