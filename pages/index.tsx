import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { TOGGLE_TRENDING_ITEMS } from '@/const/toggleBar'
import { GetStaticProps } from 'next'
import { dehydrate, QueryClient, useQuery } from 'react-query'
import BackEnd from '@/network'
import IntroHero from '@/components/landing/intro'
import MediaItemList from '@/components/landing/section/MediaItemList'
import { useCommonData } from '@/hooks'
import { MovieResponse } from '@/types/network/response'
import { BaseItem } from '@/types/interface'
export const getServerSideProps: GetStaticProps = async (ctx) => {
  const queryClient = new QueryClient()
  try {
    const array = [TOGGLE_TRENDING_ITEMS[0], TOGGLE_TRENDING_ITEMS[2], TOGGLE_TRENDING_ITEMS[3]]
    await Promise.all(
      array.map((item) =>
        queryClient.prefetchQuery(
          [item.id, 1],
          () =>
            BackEnd.common.getItems({
              url: item.value,
              page: 1,
            }),
          {
            staleTime: Infinity,
          }
        )
      )
    )
    const data = queryClient.getQueryData([TOGGLE_TRENDING_ITEMS[0].id, 1])
    return {
      props: {
        dehydratedState: dehydrate(queryClient),
      },
    }
  } catch (e) {
    return {
      notFound: true,
    }
  } finally {
  }
}
export default function Home() {
  const { data: trendingMovies, isLoading: trendingMovieLoading } = useCommonData<
    MovieResponse<BaseItem[]>
  >(TOGGLE_TRENDING_ITEMS[2])

  const { data: trendingTvs, isLoading: trendingTvLoading } = useCommonData<
    MovieResponse<BaseItem[]>
  >(TOGGLE_TRENDING_ITEMS[3])

  return (
    <>
      <Head>
        <title>TMDB</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="widths=device-width, initial-scale=1" />
        <link rel="icon" href="/vercel.svg" />
      </Head>
      <main className={`${styles.main}`}>
        <IntroHero />
        <MediaItemList items={trendingMovies!} loading={trendingMovieLoading} />
        <MediaItemList items={trendingTvs!} loading={trendingTvLoading} />
      </main>
    </>
  )
}
